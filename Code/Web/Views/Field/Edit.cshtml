@using Domain
@model Web.Models.FieldCreateEditViewModel

@{
    ViewBag.Title = "Edit Field";
}

<h2>Edit Field</h2>

@Html.Navigator("Cancel", "Index", "Field")

@using (Html.BeginForm())
{
    @Html.HiddenFor(m => m.Id)

    <ul class="input-list">
        <li>Description: @Html.TextBoxFor(m => m.Description)</li>
        <li>Size: @Html.DropDownListFor(m => m.Size, new SelectList(Enum.GetValues(typeof(FieldSize))))</li>
        <li>@Html.CheckBoxFor(m => m.AreRefereesRequired) @Html.LabelFor(m => m.AreRefereesRequired, "Ref required?")</li>
        <li>@Html.CheckBoxFor(m => m.HasLights) @Html.LabelFor(m => m.HasLights, "Has lights?")</li>
        <li>@Html.CheckBoxFor(m => m.AllowFriendly) @Html.LabelFor(m => m.AllowFriendly, "Allows friendly games?")</li>
        <li>@Html.CheckBoxFor(m => m.AllowStateLeague) @Html.LabelFor(m => m.AllowStateLeague, "Allows State League games?")</li>
        <li>@Html.CheckBoxFor(m => m.AllowTraining) @Html.LabelFor(m => m.AllowTraining, "Allows training?")</li>
        <li>
            <div class="list-header">Conflicts:</div>
            <ul>
                @for (var i = 0; i < Model.Conflicts.Count; i++)
                {
                    <li>
                        @Html.CheckBox(string.Format("Conflicts[{0}].IsConflict", i), Model.Conflicts[i].IsConflict)
                        @Html.Label(string.Format("Conflicts[{0}].IsConflict", i), Model.Conflicts[i].Description)
                        @Html.Hidden(string.Format("Conflicts[{0}].Id", i), Model.Conflicts[i].Id)
                        @Html.Hidden(string.Format("Conflicts[{0}].Description", i), Model.Conflicts[i].Description)
                    </li>
                }
            </ul>
        </li>
    </ul>
    <input type="submit" value="Update" />
}